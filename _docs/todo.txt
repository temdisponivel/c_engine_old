add audio
    add music
    add distance attenuation
    fix 3D problems


move stencil settings to material

add something similar to a sprite renderer or a VERY easy way to load sprites

make it possible to rebuff mesh sound_data to opengl
    make immediate_quad, immediate_circle, etc

revisite the relation between camera, material, buffers (color, depth, stencil), etc

finish implementing all window functions

cursor manipulation (set pos, image, etc)

make sure the input system is good enough, maybe query the key states ourselfs instead of getting the callback

test the layout of the input (it seems to NOT be ABTN2)

add transparency (blend, etc)

fix all the "todo:" in code
make cube appear in scene and rotate properly (being loaded from the obj file) ** (need to create the index buffer)

better material (relative paths to texture and shaders, maybe hot reload)
better error handling
fix release stuff

maybe load materials from string buffer instead of FILE?

maybe put all shaders into one file and parse at runtime (just like shader lab)?

Because as of this moment, the material is telling the game all the uniforms, properties, etc
this should really be done in the shader. The material should only "read" what the shader exposes
and change the values of the properties

implement offset + wrap

add options to change DEPTH TEST and DEPTH_FUNC (and possible other similar features) on the material to be used!

refactor the archtecture of the core stuff

also refactor the stuff on graphics (like the list of all mesh renderers that will be draw)

text input

implement joystick input

make functions inline

fix load of RGB-only textures